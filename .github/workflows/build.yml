name: "build"
on:
  pull_request:
    branches:
      - main
  merge_group:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # 0000 UTC Sunday

env:
  FQ_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.platform == 'x86_64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    outputs:
      digest-latest-x86_64: ${{ steps.push.outputs.latest-digest-x86_64 }}
      digest-titanoboa-x86_64: ${{ steps.push.outputs.latest-digest-x86_64 }}
      digest-latest-aarch64: ${{ steps.push.outputs.latest-digest-aarch64 }}
      digest-titanoboa-aarch64: ${{ steps.push.outputs.latest-digest-aarch64 }}
    permissions:
      actions: read
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - x86_64
          - aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Image name
        id: name
        run: |
          echo "FQ_NAME=${FQ_NAME,,}" >> "$GITHUB_OUTPUT"

      - name: Build Dev Container
        id: build
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6 # v0.3
        with:
          subFolder: ./src/base
          imageName: ${{ steps.name.outputs.FQ_NAME }}
          imageTag: latest-${{ matrix.platform }}
          push: never

      # - name: Build Titanoboa Dev Container
      #   id: build-titanoboa
      #   uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6 # v0.3
      #   with:
      #     cacheFrom: ghcr.io/ublue-os/devcontainer:latest-${{ matrix.platform }}
      #     subFolder: ./src/titanoboa
      #     imageName: ${{ steps.name.outputs.FQ_NAME }}
      #     imageTag: titanoboa-${{ matrix.platform }}
      #     push: never

      - name: Install Cosign
        if: contains(fromJson('["workflow_dispatch", "merge_group", "schedule"]'), github.event_name)
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1

      - name: Login to GHCR
        if: contains(fromJson('["workflow_dispatch", "merge_group", "schedule"]'), github.event_name)
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push to GHCR
        if: contains(fromJson('["workflow_dispatch", "merge_group", "schedule"]'), github.event_name)
        id: push
        run: |
          skopeo copy --digestfile=/tmp/digest-latest --retry-times=5 docker-daemon:${{ steps.name.outputs.FQ_NAME }}:latest-${{ matrix.platform }} docker://${{ steps.name.outputs.FQ_NAME }}:latest-${{ matrix.platform }}
          # skopeo copy --digestfile=/tmp/digest-titanoboa --retry-times=5 docker-daemon:${{ steps.name.outputs.FQ_NAME }}:titanoboa-${{ matrix.platform }} docker://${{ steps.name.outputs.FQ_NAME }}:titanoboa-${{ matrix.platform }}
          echo "digest-latest-${{ matrix.platform }}=$(cat /tmp/digest-latest)" >> $GITHUB_OUTPUT
          # echo "digest-titanoboa-${{ matrix.platform }}=$(cat /tmp/digest-titanoboa)" >> $GITHUB_OUTPUT

      - name: Sign
        if: contains(fromJson('["workflow_dispatch", "merge_group", "schedule"]'), github.event_name)
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.name.outputs.FQ_NAME }}@"$(cat /tmp/digest-latest)"
          # cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.name.outputs.FQ_NAME }}@"$(cat /tmp/digest-titanoboa)"
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

  manifest-devcontainer:
    name: DevContainer Manifest
    if: contains(fromJson('["workflow_dispatch", "merge_group", "schedule"]'), github.event_name)
    needs: ["build"]
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        target:
          - latest
          # - titanoboa
    steps:
      - name: Image name
        id: name
        run: |
          echo "FQ_NAME=${FQ_NAME,,}" >> "$GITHUB_OUTPUT"

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3.9.1

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Manifest
        run: |
          LABELS=(
            "name=${{ matrix.target == 'latest' && 'devcontainer' || 'titanoboa' }}"
            "org.opencontainers.image.name=devcontainer"
            "org.opencontainers.image.url=https://github.com/ublue-os/devcontainer"
            "org.opencontainers.image.vendor=Universal Blue"
            "org.opencontainers.image.version=${{ matrix.target == 'latest' && 'base' || 'titanoboa' }}"
            "vendor=Universal Blue"
            "version=${{ matrix.target == 'latest' && 'base' || 'titanoboa' }}"
          )
          MANIFEST="$(podman manifest create ${{ steps.name.outputs.FQ_NAME }}:${{ matrix.target }} ${{ steps.name.outputs.FQ_NAME }}@${{ matrix.target == 'latest' && needs.build.outputs.digest-latest-x86_64 || needs.build.outputs.digest-titanoboa-x86_64 }} ${{ steps.name.outputs.FQ_NAME }}@${{ matrix.target == 'latest' && needs.build.outputs.digest-latest-aarch64 || needs.build.outputs.digest-titanoboa-aarch64 }})"

          for label in "${LABELS[@]}"; do
              echo "Applying label "${label}" to manifest"
              podman manifest annotate --index --annotation "$label" "${MANIFEST}"
          done
          for i in {1..5}; do
              podman manifest push --all --digestfile=/tmp/digest ${{ steps.name.outputs.FQ_NAME }}:${{ matrix.target }} && break || sleep $(( i * 5 ));
              if [ "$i" -gt 5 ]; then
                  exit 1
              fi
          done

      - name: Sign
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.name.outputs.FQ_NAME }}@"$(cat /tmp/digest)"
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
